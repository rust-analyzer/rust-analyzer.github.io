<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust-analyzer</title>
    <description>rust-analyzer: building a better Rust IDE</description>
    <link>https://rust-analyzer.github.io//</link>
    <atom:link href="https://rust-analyzer.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 01 Nov 2025 00:25:11 +0000</pubDate>
    <lastBuildDate>Sat, 01 Nov 2025 00:25:11 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Changelog #299</title>
        <pubDate>Mon, 27 Oct 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/10/27/changelog-299.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/10/27/changelog-299.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/049767e6faa84b2d1a951d8f227e6ebd99d728a2&quot;&gt;&lt;code&gt;049767e&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-10-27&quot;&gt;&lt;code&gt;2025-10-27&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2658&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20854&quot;&gt;&lt;code&gt;#20854&lt;/code&gt;&lt;/a&gt; (first contribution) parse script frontmatter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20837&quot;&gt;&lt;code&gt;#20837&lt;/code&gt;&lt;/a&gt; (first contribution) expose &lt;code&gt;addConfiguration&lt;/code&gt; API from the Code extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20329&quot;&gt;&lt;code&gt;#20329&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20445&quot;&gt;&lt;code&gt;#20445&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20446&quot;&gt;&lt;code&gt;#20446&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20454&quot;&gt;&lt;code&gt;#20454&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20470&quot;&gt;&lt;code&gt;#20470&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20447&quot;&gt;&lt;code&gt;#20447&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20496&quot;&gt;&lt;code&gt;#20496&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20497&quot;&gt;&lt;code&gt;#20497&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20502&quot;&gt;&lt;code&gt;#20502&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20506&quot;&gt;&lt;code&gt;#20506&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20523&quot;&gt;&lt;code&gt;#20523&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20527&quot;&gt;&lt;code&gt;#20527&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20537&quot;&gt;&lt;code&gt;#20537&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20545&quot;&gt;&lt;code&gt;#20545&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20553&quot;&gt;&lt;code&gt;#20553&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20563&quot;&gt;&lt;code&gt;#20563&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20586&quot;&gt;&lt;code&gt;#20586&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20609&quot;&gt;&lt;code&gt;#20609&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20578&quot;&gt;&lt;code&gt;#20578&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20647&quot;&gt;&lt;code&gt;#20647&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20645&quot;&gt;&lt;code&gt;#20645&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20649&quot;&gt;&lt;code&gt;#20649&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20654&quot;&gt;&lt;code&gt;#20654&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20665&quot;&gt;&lt;code&gt;#20665&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20671&quot;&gt;&lt;code&gt;#20671&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20677&quot;&gt;&lt;code&gt;#20677&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20664&quot;&gt;&lt;code&gt;#20664&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20717&quot;&gt;&lt;code&gt;#20717&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20728&quot;&gt;&lt;code&gt;#20728&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20733&quot;&gt;&lt;code&gt;#20733&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20735&quot;&gt;&lt;code&gt;#20735&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20738&quot;&gt;&lt;code&gt;#20738&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20765&quot;&gt;&lt;code&gt;#20765&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20777&quot;&gt;&lt;code&gt;#20777&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20785&quot;&gt;&lt;code&gt;#20785&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20814&quot;&gt;&lt;code&gt;#20814&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20834&quot;&gt;&lt;code&gt;#20834&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20841&quot;&gt;&lt;code&gt;#20841&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20867&quot;&gt;&lt;code&gt;#20867&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20873&quot;&gt;&lt;code&gt;#20873&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20882&quot;&gt;&lt;code&gt;#20882&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20888&quot;&gt;&lt;code&gt;#20888&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20896&quot;&gt;&lt;code&gt;#20896&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20893&quot;&gt;&lt;code&gt;#20893&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20895&quot;&gt;&lt;code&gt;#20895&lt;/code&gt;&lt;/a&gt; switch from Chalk to the next trait solver.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20632&quot;&gt;&lt;code&gt;#20632&lt;/code&gt;&lt;/a&gt; support navigation on primitives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20760&quot;&gt;&lt;code&gt;#20760&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;any&lt;/code&gt; and &lt;code&gt;not&lt;/code&gt; completions in &lt;code&gt;#[cfg]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20806&quot;&gt;&lt;code&gt;#20806&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20835&quot;&gt;&lt;code&gt;#20835&lt;/code&gt;&lt;/a&gt; log flycheck &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; to files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19771&quot;&gt;&lt;code&gt;#19771&lt;/code&gt;&lt;/a&gt; add &quot;Generate blanket trait impl&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20705&quot;&gt;&lt;code&gt;#20705&lt;/code&gt;&lt;/a&gt; add &quot;Flip range expression&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19918&quot;&gt;&lt;code&gt;#19918&lt;/code&gt;&lt;/a&gt; add &quot;Remove &lt;code&gt;else&lt;/code&gt; branches&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20855&quot;&gt;&lt;code&gt;#20855&lt;/code&gt;&lt;/a&gt; improve fixture support.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20583&quot;&gt;&lt;code&gt;#20583&lt;/code&gt;&lt;/a&gt; (first contribution) add &lt;code&gt;rust-analyzer.semanticHighlighting.comments.enable&lt;/code&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20697&quot;&gt;&lt;code&gt;#20697&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20745&quot;&gt;&lt;code&gt;#20745&lt;/code&gt;&lt;/a&gt; (first contribution) fix negative literals in const generics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19867&quot;&gt;&lt;code&gt;#19867&lt;/code&gt;&lt;/a&gt; (first contribution) allow &lt;code&gt;&amp;amp;raw [mut | const]&lt;/code&gt; for union fields in safe code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20432&quot;&gt;&lt;code&gt;#20432&lt;/code&gt;&lt;/a&gt; (first contribution) improve identifier pattern handling in assists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20891&quot;&gt;&lt;code&gt;#20891&lt;/code&gt;&lt;/a&gt; (first contribution) add &lt;code&gt;negation&lt;/code&gt; semantic token type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20425&quot;&gt;&lt;code&gt;#20425&lt;/code&gt;&lt;/a&gt; (first contribution) add parser heuristic to warn on unterminated strings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20520&quot;&gt;&lt;code&gt;#20520&lt;/code&gt;&lt;/a&gt; add option to hide reborrows in adjustment inlay hints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20721&quot;&gt;&lt;code&gt;#20721&lt;/code&gt;&lt;/a&gt; implement fallback properly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20755&quot;&gt;&lt;code&gt;#20755&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;#[doc = include_str!(…)]&lt;/code&gt; completion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20423&quot;&gt;&lt;code&gt;#20423&lt;/code&gt;&lt;/a&gt; make import sorting order follow the 2024 edition style.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20801&quot;&gt;&lt;code&gt;#20801&lt;/code&gt;&lt;/a&gt; small fixes for import insertion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20866&quot;&gt;&lt;code&gt;#20866&lt;/code&gt;&lt;/a&gt; run &lt;code&gt;cargo metadata&lt;/code&gt; on sysroot right from its path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20554&quot;&gt;&lt;code&gt;#20554&lt;/code&gt;&lt;/a&gt; improve handling of the &lt;code&gt;env!&lt;/code&gt; macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20587&quot;&gt;&lt;code&gt;#20587&lt;/code&gt;&lt;/a&gt; deduplicate methods in completion by function ID and not by name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20803&quot;&gt;&lt;code&gt;#20803&lt;/code&gt;&lt;/a&gt; replace &lt;code&gt;--show-output&lt;/code&gt; task defaults with &lt;code&gt;--nocapture&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20459&quot;&gt;&lt;code&gt;#20459&lt;/code&gt;&lt;/a&gt; track diagnostic generations per package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20689&quot;&gt;&lt;code&gt;#20689&lt;/code&gt;&lt;/a&gt; make flycheck clearing dependency-aware.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20635&quot;&gt;&lt;code&gt;#20635&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t trigger two flychecks when saving files that are part of targets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20402&quot;&gt;&lt;code&gt;#20402&lt;/code&gt;&lt;/a&gt; add more workarounds for incorrect startup diagnostics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20787&quot;&gt;&lt;code&gt;#20787&lt;/code&gt;&lt;/a&gt; fix spurious &lt;code&gt;incorrect_generics_len&lt;/code&gt; on generic enum variants used through type aliases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20770&quot;&gt;&lt;code&gt;#20770&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t trigger &lt;code&gt;trait-impl-incorrect-safety&lt;/code&gt; on unresolved traits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20642&quot;&gt;&lt;code&gt;#20642&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;#[target_feature]&lt;/code&gt; safe on WASM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20504&quot;&gt;&lt;code&gt;#20504&lt;/code&gt;&lt;/a&gt; avoid infinite recursion while lowering associated type bounds from supertraits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20720&quot;&gt;&lt;code&gt;#20720&lt;/code&gt;&lt;/a&gt; prevent rustup from automatically installing toolchains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20528&quot;&gt;&lt;code&gt;#20528&lt;/code&gt;&lt;/a&gt; masquerade as nightly cargo when invoking flycheck with &lt;code&gt;-Zscript&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20612&quot;&gt;&lt;code&gt;#20612&lt;/code&gt;&lt;/a&gt; fix &quot;Expand macro recursively&quot; on nested macro calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20517&quot;&gt;&lt;code&gt;#20517&lt;/code&gt;&lt;/a&gt; only compute unstable paths on nightly toolchains for IDE features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20639&quot;&gt;&lt;code&gt;#20639&lt;/code&gt;&lt;/a&gt; resolve paths to snapshot test libraries absolutely.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20547&quot;&gt;&lt;code&gt;#20547&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t highlight unrelated unsafe operation on &lt;code&gt;unsafe&lt;/code&gt; blocks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20579&quot;&gt;&lt;code&gt;#20579&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t pass &lt;code&gt;--target&lt;/code&gt; to &lt;code&gt;rustc&lt;/code&gt; twice while fetching target data layout.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20475&quot;&gt;&lt;code&gt;#20475&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t duplicate lang items with overridden sysroot crates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20518&quot;&gt;&lt;code&gt;#20518&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;else&lt;/code&gt; completion in &lt;code&gt;let _ = if x {} $0&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20390&quot;&gt;&lt;code&gt;#20390&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;if&lt;/code&gt;-&lt;code&gt;else&lt;/code&gt; completions in &lt;code&gt;let&lt;/code&gt; statements and argument lists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20620&quot;&gt;&lt;code&gt;#20620&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20657&quot;&gt;&lt;code&gt;#20657&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;else&lt;/code&gt; keyword completion after &lt;code&gt;let&lt;/code&gt; statements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20653&quot;&gt;&lt;code&gt;#20653&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t output an empty generic parameters list in &lt;code&gt;generate_function&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20708&quot;&gt;&lt;code&gt;#20708&lt;/code&gt;&lt;/a&gt; fix panic in &lt;code&gt;destructure_struct_binding&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20702&quot;&gt;&lt;code&gt;#20702&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;else&lt;/code&gt; completion before &lt;code&gt;else&lt;/code&gt; keyword.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20700&quot;&gt;&lt;code&gt;#20700&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;extract_variable&lt;/code&gt; on &lt;code&gt;if&lt;/code&gt;-&lt;code&gt;let&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20709&quot;&gt;&lt;code&gt;#20709&lt;/code&gt;&lt;/a&gt; fix panic in &lt;code&gt;destructure_struct_binding&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20710&quot;&gt;&lt;code&gt;#20710&lt;/code&gt;&lt;/a&gt; fix shorthand fields in &lt;code&gt;unused_variables&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20661&quot;&gt;&lt;code&gt;#20661&lt;/code&gt;&lt;/a&gt; tighten up expected type completions in &lt;code&gt;if&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20507&quot;&gt;&lt;code&gt;#20507&lt;/code&gt;&lt;/a&gt; handle expected &lt;code&gt;return&lt;/code&gt; type in completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20725&quot;&gt;&lt;code&gt;#20725&lt;/code&gt;&lt;/a&gt; fix lifetime elision handling for &lt;code&gt;Fn&lt;/code&gt;-style trait bounds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20624&quot;&gt;&lt;code&gt;#20624&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;lifetime_bounds&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20723&quot;&gt;&lt;code&gt;#20723&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;bind_unused_param&lt;/code&gt; with binding modes and underscore prefixes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20722&quot;&gt;&lt;code&gt;#20722&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;pull_assignment_up&lt;/code&gt; on chained &lt;code&gt;if&lt;/code&gt;s.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20679&quot;&gt;&lt;code&gt;#20679&lt;/code&gt;&lt;/a&gt; fix type completion with nested patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20592&quot;&gt;&lt;code&gt;#20592&lt;/code&gt;&lt;/a&gt; handle closures inside &lt;code&gt;match&lt;/code&gt; in &lt;code&gt;add_braces&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20543&quot;&gt;&lt;code&gt;#20543&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t suggest invalid transformation in &lt;code&gt;replace_if_let_with_match&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20742&quot;&gt;&lt;code&gt;#20742&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t turn unused variables into raw identifier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20598&quot;&gt;&lt;code&gt;#20598&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;let&lt;/code&gt; chains in &lt;code&gt;convert_to_guarded_return&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20731&quot;&gt;&lt;code&gt;#20731&lt;/code&gt;&lt;/a&gt; handle tuple and slice rest patterns in &lt;code&gt;expand_rest_pattern&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20729&quot;&gt;&lt;code&gt;#20729&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;const&lt;/code&gt; generic parameter keyword completion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20793&quot;&gt;&lt;code&gt;#20793&lt;/code&gt;&lt;/a&gt; add missing parentheses on ambiguity in &lt;code&gt;missing_unsafe&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20513&quot;&gt;&lt;code&gt;#20513&lt;/code&gt;&lt;/a&gt; complete &lt;code&gt;let&lt;/code&gt; in &lt;code&gt;let&lt;/code&gt;-chains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20812&quot;&gt;&lt;code&gt;#20812&lt;/code&gt;&lt;/a&gt; complete &lt;code&gt;self&lt;/code&gt; parameters in associated trait functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20805&quot;&gt;&lt;code&gt;#20805&lt;/code&gt;&lt;/a&gt; improve parse errors for &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20824&quot;&gt;&lt;code&gt;#20824&lt;/code&gt;&lt;/a&gt; fix completion type analysis in empty closures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20817&quot;&gt;&lt;code&gt;#20817&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;add_explicit_type&lt;/code&gt; on parameters in &lt;code&gt;let&lt;/code&gt; statements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20816&quot;&gt;&lt;code&gt;#20816&lt;/code&gt;&lt;/a&gt; handle closure return type adjustments in &lt;code&gt;add_return_type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20526&quot;&gt;&lt;code&gt;#20526&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;let&lt;/code&gt;-chains for &lt;code&gt;.let&lt;/code&gt; completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20788&quot;&gt;&lt;code&gt;#20788&lt;/code&gt;&lt;/a&gt; allow more string literal conversions from raw strings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20838&quot;&gt;&lt;code&gt;#20838&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t make &lt;code&gt;convert_to_guarded_return&lt;/code&gt; applicable on &lt;code&gt;let-else&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20758&quot;&gt;&lt;code&gt;#20758&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;else&lt;/code&gt; blocks with &lt;code&gt;!&lt;/code&gt; return type in &lt;code&gt;convert_to_guarded_return&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20772&quot;&gt;&lt;code&gt;#20772&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;match&lt;/code&gt; inside &lt;code&gt;if&lt;/code&gt; in &lt;code&gt;pull_assignment_up&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20673&quot;&gt;&lt;code&gt;#20673&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;break&lt;/code&gt; with value in completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20858&quot;&gt;&lt;code&gt;#20858&lt;/code&gt;&lt;/a&gt; include trailing underscores when hiding inlay hints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20872&quot;&gt;&lt;code&gt;#20872&lt;/code&gt;&lt;/a&gt; add missing rest pattern in &lt;code&gt;convert_named_struct_to_tuple_struct&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20880&quot;&gt;&lt;code&gt;#20880&lt;/code&gt;&lt;/a&gt; fix invalid rest pattern in &lt;code&gt;convert_tuple_struct_to_named_struct&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20455&quot;&gt;&lt;code&gt;#20455&lt;/code&gt;&lt;/a&gt; fix indent in &lt;code&gt;convert_match_to_let_else&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20509&quot;&gt;&lt;code&gt;#20509&lt;/code&gt;&lt;/a&gt; fix indent in &lt;code&gt;move_guard_to_arm_body&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20613&quot;&gt;&lt;code&gt;#20613&lt;/code&gt;&lt;/a&gt; fix indent in &lt;code&gt;unresolved_field&lt;/code&gt; diagnostic fixes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20845&quot;&gt;&lt;code&gt;#20845&lt;/code&gt;&lt;/a&gt; fix indent in &lt;code&gt;add_braces&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20850&quot;&gt;&lt;code&gt;#20850&lt;/code&gt;&lt;/a&gt; fix indent in &lt;code&gt;add_missing_match_arms&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20670&quot;&gt;&lt;code&gt;#20670&lt;/code&gt;&lt;/a&gt; improve incomplete statement heuristic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20831&quot;&gt;&lt;code&gt;#20831&lt;/code&gt;&lt;/a&gt; add shorthand record field completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20571&quot;&gt;&lt;code&gt;#20571&lt;/code&gt;&lt;/a&gt; add type keyword completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20886&quot;&gt;&lt;code&gt;#20886&lt;/code&gt;&lt;/a&gt; improve handling of missing names in &lt;code&gt;MethodCallExpr&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20905&quot;&gt;&lt;code&gt;#20905&lt;/code&gt;&lt;/a&gt; fix array inhabitedness check.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20889&quot;&gt;&lt;code&gt;#20889&lt;/code&gt;&lt;/a&gt; improve field completion parentheses heuristic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20658&quot;&gt;&lt;code&gt;#20658&lt;/code&gt;&lt;/a&gt; complete &lt;code&gt;else&lt;/code&gt; in more expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20611&quot;&gt;&lt;code&gt;#20611&lt;/code&gt;&lt;/a&gt; add parentheses for precedence in &lt;code&gt;replace_arith_op&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20912&quot;&gt;&lt;code&gt;#20912&lt;/code&gt;&lt;/a&gt; complete &lt;code&gt;let&lt;/code&gt; before expression in &lt;code&gt;if&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20764&quot;&gt;&lt;code&gt;#20764&lt;/code&gt;&lt;/a&gt; handle &lt;code&gt;if&lt;/code&gt;-&lt;code&gt;let&lt;/code&gt; in &lt;code&gt;convert_to_guarded_return&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20712&quot;&gt;&lt;code&gt;#20712&lt;/code&gt;&lt;/a&gt; handle shorthand field patterns in &lt;code&gt;destructure_tuple_binding&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20589&quot;&gt;&lt;code&gt;#20589&lt;/code&gt;&lt;/a&gt; place new module outside &lt;code&gt;impl&lt;/code&gt; block in &lt;code&gt;extract_module&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20913&quot;&gt;&lt;code&gt;#20913&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;let&lt;/code&gt;-chains in &lt;code&gt;replace_is_method_with_if_let_method&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20626&quot;&gt;&lt;code&gt;#20626&lt;/code&gt;&lt;/a&gt; improve whitespace in &lt;code&gt;make::struct_field_list&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20534&quot;&gt;&lt;code&gt;#20534&lt;/code&gt;&lt;/a&gt; improve semicolon handling in &lt;code&gt;toggle_macro_delimiter&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20442&quot;&gt;&lt;code&gt;#20442&lt;/code&gt;&lt;/a&gt; only import the item in &quot;Unqualify method call&quot; when needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20686&quot;&gt;&lt;code&gt;#20686&lt;/code&gt;&lt;/a&gt; only offer &lt;code&gt;generate_default_from_enum_variant&lt;/code&gt; when the variant name is completely selected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20771&quot;&gt;&lt;code&gt;#20771&lt;/code&gt;&lt;/a&gt; offer &lt;code&gt;invert_if&lt;/code&gt; on &lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20844&quot;&gt;&lt;code&gt;#20844&lt;/code&gt;&lt;/a&gt; offer &lt;code&gt;add_braces&lt;/code&gt; on assignments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20599&quot;&gt;&lt;code&gt;#20599&lt;/code&gt;&lt;/a&gt; offer &lt;code&gt;apply_demorgan&lt;/code&gt; on &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20456&quot;&gt;&lt;code&gt;#20456&lt;/code&gt;&lt;/a&gt; support guards in &lt;code&gt;replace_match_with_if_let&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20714&quot;&gt;&lt;code&gt;#20714&lt;/code&gt;&lt;/a&gt; allow trailing comma in &lt;code&gt;remove_dbg!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20511&quot;&gt;&lt;code&gt;#20511&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t offer &lt;code&gt;convert_integer_literal&lt;/code&gt; on selections.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20512&quot;&gt;&lt;code&gt;#20512&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t offer &lt;code&gt;replace_arith_op&lt;/code&gt; on selections.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20736&quot;&gt;&lt;code&gt;#20736&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t offer &lt;code&gt;invert_if&lt;/code&gt; on &lt;code&gt;if-let&lt;/code&gt; chains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20682&quot;&gt;&lt;code&gt;#20682&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t offer &lt;code&gt;change_visibility&lt;/code&gt; for variant fields.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20688&quot;&gt;&lt;code&gt;#20688&lt;/code&gt;&lt;/a&gt; reduce &lt;code&gt;replace_is_method_with_if_let_method&lt;/code&gt; applicability range.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20759&quot;&gt;&lt;code&gt;#20759&lt;/code&gt;&lt;/a&gt; fix casts and use typed syntax tree API in &lt;code&gt;convert_to_guarded_return&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20876&quot;&gt;&lt;code&gt;#20876&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;signature_help&lt;/code&gt; LSP conversion creating invalid UTF-16 offsets.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20379&quot;&gt;&lt;code&gt;#20379&lt;/code&gt;&lt;/a&gt; (first contribution) consistently use &lt;code&gt;---&lt;/code&gt; for horizontal rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20483&quot;&gt;&lt;code&gt;#20483&lt;/code&gt;&lt;/a&gt; (first contribution) optimize VS Code extension icon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20794&quot;&gt;&lt;code&gt;#20794&lt;/code&gt;&lt;/a&gt; (first contribution) deduplicate &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;dedup&lt;/code&gt; calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20667&quot;&gt;&lt;code&gt;#20667&lt;/code&gt;&lt;/a&gt; add regression test for The One and Only Issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20376&quot;&gt;&lt;code&gt;#20376&lt;/code&gt;&lt;/a&gt; merge &lt;code&gt;Trait&lt;/code&gt; and &lt;code&gt;TraitAlias&lt;/code&gt; handling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20399&quot;&gt;&lt;code&gt;#20399&lt;/code&gt;&lt;/a&gt; enable warning logs by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20706&quot;&gt;&lt;code&gt;#20706&lt;/code&gt;&lt;/a&gt; avoid allocating in &lt;code&gt;stdx::replace&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20730&quot;&gt;&lt;code&gt;#20730&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20748&quot;&gt;&lt;code&gt;#20748&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20860&quot;&gt;&lt;code&gt;#20860&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;expand_record_rest_pattern&lt;/code&gt;, &lt;code&gt;replace_arith_op&lt;/code&gt; and &lt;code&gt;generate_single_field_struct_from&lt;/code&gt; assists to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20796&quot;&gt;&lt;code&gt;#20796&lt;/code&gt;&lt;/a&gt; bump &lt;code&gt;salsa&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20852&quot;&gt;&lt;code&gt;#20852&lt;/code&gt;&lt;/a&gt; do not enable &lt;code&gt;force-always-assert&lt;/code&gt; by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20631&quot;&gt;&lt;code&gt;#20631&lt;/code&gt;&lt;/a&gt; remove support for &lt;code&gt;#[register_attr]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20804&quot;&gt;&lt;code&gt;#20804&lt;/code&gt;&lt;/a&gt; pass &lt;code&gt;--target&lt;/code&gt; to &lt;code&gt;xtask install&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20683&quot;&gt;&lt;code&gt;#20683&lt;/code&gt;&lt;/a&gt; expose iterators over the types in &lt;code&gt;InferenceResult&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20669&quot;&gt;&lt;code&gt;#20669&lt;/code&gt;&lt;/a&gt; add a testing guide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20633&quot;&gt;&lt;code&gt;#20633&lt;/code&gt;&lt;/a&gt; clarify introduction in the README and manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20638&quot;&gt;&lt;code&gt;#20638&lt;/code&gt;&lt;/a&gt; add FAQ entry about Cargo build lock and cache conflicts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20560&quot;&gt;&lt;code&gt;#20560&lt;/code&gt;&lt;/a&gt; add progress bars to more places in &lt;code&gt;analysis-stats&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20652&quot;&gt;&lt;code&gt;#20652&lt;/code&gt;&lt;/a&gt; improve &lt;code&gt;rust-analyzer diagnostics&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20774&quot;&gt;&lt;code&gt;#20774&lt;/code&gt;&lt;/a&gt; build &lt;code&gt;x86_64-apple-darwin&lt;/code&gt; binaries on &lt;code&gt;macos-14&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #298</title>
        <pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/08/11/changelog-298.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/08/11/changelog-298.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/9db05508ed08a4c952017769b45b57c4ad505872&quot;&gt;&lt;code&gt;9db0550&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-08-11&quot;&gt;&lt;code&gt;2025-08-11&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2577&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;an-update-on-the-next-trait-solver&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#an-update-on-the-next-trait-solver&quot;&gt;&lt;/a&gt;An Update on the Next Trait Solver&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very close to switching from &lt;code&gt;chalk&lt;/code&gt; to the next trait solver, which will be shared with &lt;code&gt;rustc&lt;/code&gt;.
&lt;code&gt;chalk&lt;/code&gt; is &lt;em&gt;de-facto&lt;/em&gt; unmaintained, and sharing the code with the compiler will greatly improve trait solving accuracy and fix long-standing issues in &lt;code&gt;rust-analyzer&lt;/code&gt;.
This will also let us enable more on-the-fly diagnostics (currently marked as experimental), and even significantly improve performance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, in order to avoid regressions, we will suspend the weekly releases until the new solver is stabilized.
In the meanwhile, please test the pre-release versions (nightlies) and report any issues or improvements you notice, either on &lt;a href=&quot;https://github.com/rust-lang/rust-analyzer/issues&quot;&gt;GitHub Issues&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-lang/rust-analyzer/discussions/20426&quot;&gt;GitHub Discussions&lt;/a&gt;, or &lt;a href=&quot;https://rust-lang.zulipchat.com/#narrow/channel/185405-t-compiler.2Frust-analyzer/topic/New.20Trait.20Solver.20feedback&quot;&gt;Zulip&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20420&quot;&gt;&lt;code&gt;#20420&lt;/code&gt;&lt;/a&gt; (first contribution) add config option to exclude locals from document symbol search.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20381&quot;&gt;&lt;code&gt;#20381&lt;/code&gt;&lt;/a&gt; check expected type for assignments in completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20382&quot;&gt;&lt;code&gt;#20382&lt;/code&gt;&lt;/a&gt; correctly go to &lt;code&gt;impl From&lt;/code&gt; from &lt;code&gt;into()&lt;/code&gt; even inside macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20387&quot;&gt;&lt;code&gt;#20387&lt;/code&gt;&lt;/a&gt; do not remove the original token when descending into derives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20412&quot;&gt;&lt;code&gt;#20412&lt;/code&gt;&lt;/a&gt; properly handle names matching identifiers in &lt;code&gt;generate_function&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20418&quot;&gt;&lt;code&gt;#20418&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;extract_expressions_from_format_string&lt;/code&gt; on &lt;code&gt;write!&lt;/code&gt; calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20354&quot;&gt;&lt;code&gt;#20354&lt;/code&gt;&lt;/a&gt; remove no-op calls in &lt;code&gt;remove_dbg&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20384&quot;&gt;&lt;code&gt;#20384&lt;/code&gt;&lt;/a&gt; fix external docs URL for exported macros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20417&quot;&gt;&lt;code&gt;#20417&lt;/code&gt;&lt;/a&gt; (first contribution) fix parsing of trait bound polarity and &lt;code&gt;for&lt;/code&gt;-binders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20419&quot;&gt;&lt;code&gt;#20419&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20429&quot;&gt;&lt;code&gt;#20429&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20434&quot;&gt;&lt;code&gt;#20434&lt;/code&gt;&lt;/a&gt; make flycheck generational.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20385&quot;&gt;&lt;code&gt;#20385&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;expand_glob_import&lt;/code&gt; assist to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20373&quot;&gt;&lt;code&gt;#20373&lt;/code&gt;&lt;/a&gt; generate an &lt;code&gt;ast::Module&lt;/code&gt;, not &lt;code&gt;String&lt;/code&gt;, in &lt;code&gt;extract_module&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20383&quot;&gt;&lt;code&gt;#20383&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;ted&lt;/code&gt; from &lt;code&gt;replace_named_generic_with_impl&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20380&quot;&gt;&lt;code&gt;#20380&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;add_attr&lt;/code&gt; from &lt;code&gt;edit_in_place&lt;/code&gt; because it use &lt;code&gt;ted&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20409&quot;&gt;&lt;code&gt;#20409&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;write!&lt;/code&gt; and &lt;code&gt;writeln!&lt;/code&gt; to &lt;code&gt;minicore&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20400&quot;&gt;&lt;code&gt;#20400&lt;/code&gt;&lt;/a&gt; disable error reporting when clamping a position.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20393&quot;&gt;&lt;code&gt;#20393&lt;/code&gt;&lt;/a&gt; fix non-LSP compliant &lt;code&gt;Response&lt;/code&gt; definition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20392&quot;&gt;&lt;code&gt;#20392&lt;/code&gt;&lt;/a&gt; report the incorrect payload when failing to deserialize LSP messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20389&quot;&gt;&lt;code&gt;#20389&lt;/code&gt;&lt;/a&gt; slim down compile-time artifact progress reports.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #297</title>
        <pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/08/04/changelog-297.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/08/04/changelog-297.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/8d75311400a108d7ffe17dc9c38182c566952e6e&quot;&gt;&lt;code&gt;8d75311&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-08-04&quot;&gt;&lt;code&gt;2025-08-04&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2563&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20351&quot;&gt;&lt;code&gt;#20351&lt;/code&gt;&lt;/a&gt; change callers to use method call syntax when renaming a parameter to &lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20313&quot;&gt;&lt;code&gt;#20313&lt;/code&gt;&lt;/a&gt; fix variable substitution in &lt;code&gt;runnables.extraEnv&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20333&quot;&gt;&lt;code&gt;#20333&lt;/code&gt;&lt;/a&gt; do not require all rename definitions to be renameable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20336&quot;&gt;&lt;code&gt;#20336&lt;/code&gt;&lt;/a&gt; check for snippet cap in &lt;code&gt;generate_mut_trait_impl&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20337&quot;&gt;&lt;code&gt;#20337&lt;/code&gt;&lt;/a&gt; fix bounds display with &lt;code&gt;impl Trait&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20300&quot;&gt;&lt;code&gt;#20300&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t add &lt;code&gt;Panics&lt;/code&gt; section for &lt;code&gt;debug_assert!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20327&quot;&gt;&lt;code&gt;#20327&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t show &lt;code&gt;$saved_file&lt;/code&gt; literally in IDE status updates.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20342&quot;&gt;&lt;code&gt;#20342&lt;/code&gt;&lt;/a&gt; reorganize &lt;code&gt;proc-macro-srv&lt;/code&gt;, add &lt;code&gt;--format&lt;/code&gt; and &lt;code&gt;--version&lt;/code&gt; args.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20311&quot;&gt;&lt;code&gt;#20311&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20314&quot;&gt;&lt;code&gt;#20314&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20364&quot;&gt;&lt;code&gt;#20364&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20368&quot;&gt;&lt;code&gt;#20368&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20371&quot;&gt;&lt;code&gt;#20371&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;convert_tuple_struct_to_named_struct&lt;/code&gt;, &lt;code&gt;inline_type_alias&lt;/code&gt;, &lt;code&gt;convert_from_to_tryfrom&lt;/code&gt;, &lt;code&gt;generate_delegate_methods&lt;/code&gt; and &lt;code&gt;generate_trait_from_impl&lt;/code&gt; assists to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20303&quot;&gt;&lt;code&gt;#20303&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20372&quot;&gt;&lt;code&gt;#20372&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;path_transform&lt;/code&gt; to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20345&quot;&gt;&lt;code&gt;#20345&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;SyntaxEditor::delete_all&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20349&quot;&gt;&lt;code&gt;#20349&lt;/code&gt;&lt;/a&gt; fix new Clippy lints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20154&quot;&gt;&lt;code&gt;#20154&lt;/code&gt;&lt;/a&gt; improve settings tree descriptions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20335&quot;&gt;&lt;code&gt;#20335&lt;/code&gt;&lt;/a&gt; use GitHub app for authenticating sync PRs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #296</title>
        <pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/07/28/changelog-296.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/07/28/changelog-296.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/db02cdc7fc8b0e0b9aa1be4110a74620bbac1f98&quot;&gt;&lt;code&gt;db02cdc&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-07-28&quot;&gt;&lt;code&gt;2025-07-28&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2555&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19938&quot;&gt;&lt;code&gt;#19938&lt;/code&gt;&lt;/a&gt; add &quot;Generate impl for type&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20271&quot;&gt;&lt;code&gt;#20271&lt;/code&gt;&lt;/a&gt; disable tests in flycheck if &lt;code&gt;cfg.setTest&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20262&quot;&gt;&lt;code&gt;#20262&lt;/code&gt;&lt;/a&gt; fix search of raw labels and lifetimes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20273&quot;&gt;&lt;code&gt;#20273&lt;/code&gt;&lt;/a&gt; apply adjustments to patterns and expressions when doing pattern analysis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20281&quot;&gt;&lt;code&gt;#20281&lt;/code&gt;&lt;/a&gt; parse &lt;code&gt;for&amp;lt;'a&amp;gt; [const]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20318&quot;&gt;&lt;code&gt;#20318&lt;/code&gt;&lt;/a&gt; ignore &lt;code&gt;Destruct&lt;/code&gt; bounds again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20290&quot;&gt;&lt;code&gt;#20290&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20315&quot;&gt;&lt;code&gt;#20315&lt;/code&gt;&lt;/a&gt; use temporary directory for copied lockfiles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20319&quot;&gt;&lt;code&gt;#20319&lt;/code&gt;&lt;/a&gt; consider all produced artifacts for proc macro dylib search.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20302&quot;&gt;&lt;code&gt;#20302&lt;/code&gt;&lt;/a&gt; fix doc-comment folding with multi-line parameter lists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20285&quot;&gt;&lt;code&gt;#20285&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;Self&lt;/code&gt; when renaming &lt;code&gt;self&lt;/code&gt; parameter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20256&quot;&gt;&lt;code&gt;#20256&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;Deref&lt;/code&gt; in &lt;code&gt;generate_mut_trait_impl&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20297&quot;&gt;&lt;code&gt;#20297&lt;/code&gt;&lt;/a&gt; fix whitespace in &lt;code&gt;generate_trait_from_impl&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20272&quot;&gt;&lt;code&gt;#20272&lt;/code&gt;&lt;/a&gt; (first contribution) fix size asserts on &lt;code&gt;x86_64-unknown-linux-gnux32&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20293&quot;&gt;&lt;code&gt;#20293&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20306&quot;&gt;&lt;code&gt;#20306&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20307&quot;&gt;&lt;code&gt;#20307&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20270&quot;&gt;&lt;code&gt;#20270&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;replace_derive_with_manual_impl&lt;/code&gt;, &lt;code&gt;add_missing_impl_members&lt;/code&gt;, &lt;code&gt;convert_to_guarded_return&lt;/code&gt;, &lt;code&gt;extract_expressions_from_format_string&lt;/code&gt; and &lt;code&gt;generate_new&lt;/code&gt; assists to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20269&quot;&gt;&lt;code&gt;#20269&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;AstNodeEdit::Indent&lt;/code&gt; to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20289&quot;&gt;&lt;code&gt;#20289&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;ExpressionStoreDiagnostics::MacroError&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20278&quot;&gt;&lt;code&gt;#20278&lt;/code&gt;&lt;/a&gt; fupport filtering in &lt;code&gt;analysis-stats&lt;/code&gt; MIR lowering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20280&quot;&gt;&lt;code&gt;#20280&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20282&quot;&gt;&lt;code&gt;#20282&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20279&quot;&gt;&lt;code&gt;#20279&lt;/code&gt;&lt;/a&gt; set up &lt;code&gt;rustc-josh-sync&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #295</title>
        <pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/07/21/changelog-295.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/07/21/changelog-295.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/58e507d80728f6f32c93117668dc4510ba80bac9&quot;&gt;&lt;code&gt;58e507d&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-07-21&quot;&gt;&lt;code&gt;2025-07-21&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2547&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19783&quot;&gt;&lt;code&gt;#19783&lt;/code&gt;&lt;/a&gt; add &quot;Generate &lt;code&gt;From&lt;/code&gt; impl from single field&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20265&quot;&gt;&lt;code&gt;#20265&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;cfg_select!&lt;/code&gt; for the standard library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20238&quot;&gt;&lt;code&gt;#20238&lt;/code&gt;&lt;/a&gt; infer lifetimes for GATs in expression/pattern positions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19917&quot;&gt;&lt;code&gt;#19917&lt;/code&gt;&lt;/a&gt; handle &lt;code&gt;AsRef&lt;/code&gt; and &lt;code&gt;Borrow&lt;/code&gt; in &quot;Generate &lt;code&gt;IndexMut&lt;/code&gt; impl from &lt;code&gt;Index&lt;/code&gt;&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20247&quot;&gt;&lt;code&gt;#20247&lt;/code&gt;&lt;/a&gt; transform tail expression &lt;code&gt;&amp;amp;&lt;/code&gt; to &lt;code&gt;&amp;amp;mut&lt;/code&gt; in &quot;Generate &lt;code&gt;TraitMut&lt;/code&gt; impl from &lt;code&gt;Trait&lt;/code&gt;&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20255&quot;&gt;&lt;code&gt;#20255&lt;/code&gt;&lt;/a&gt; fix bounds in &quot;Generate &lt;code&gt;Deref&lt;/code&gt; impl&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20233&quot;&gt;&lt;code&gt;#20233&lt;/code&gt;&lt;/a&gt; (first contribution) expand &lt;code&gt;lsp-server&lt;/code&gt; example.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20178&quot;&gt;&lt;code&gt;#20178&lt;/code&gt;&lt;/a&gt; clean up cargo config querying.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20234&quot;&gt;&lt;code&gt;#20234&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;{ConstParam,TypeParam}::remove_default&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20246&quot;&gt;&lt;code&gt;#20246&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;AsMut&lt;/code&gt; to &lt;code&gt;minicore&lt;/code&gt; prelude.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #294</title>
        <pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/07/14/changelog-294.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/07/14/changelog-294.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/591e3b7624be97e4443ea7b5542c191311aa141d&quot;&gt;&lt;code&gt;591e3b7&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-07-14&quot;&gt;&lt;code&gt;2025-07-14&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2539&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20054&quot;&gt;&lt;code&gt;#20054&lt;/code&gt;&lt;/a&gt; support folding multi-line parameter list with the function body:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://github.com/user-attachments/assets/0f1918e8-3545-4cd0-839e-fd5c7386f3fc&quot; alt=&quot;Screen recording demonstrating folding the parameter list of a function together with its body&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20185&quot;&gt;&lt;code&gt;#20185&lt;/code&gt;&lt;/a&gt; include enum variants in world symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20109&quot;&gt;&lt;code&gt;#20109&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;generate_new&lt;/code&gt; work for tuple structs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20192&quot;&gt;&lt;code&gt;#20192&lt;/code&gt;&lt;/a&gt; fix a panic in documentation rendering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20180&quot;&gt;&lt;code&gt;#20180&lt;/code&gt;&lt;/a&gt; always bump in the parser in &lt;code&gt;err_and_bump&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20200&quot;&gt;&lt;code&gt;#20200&lt;/code&gt;&lt;/a&gt; revert &quot;re-enable fixpoint iteration for variance computation&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20212&quot;&gt;&lt;code&gt;#20212&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;dyn&lt;/code&gt; inlay hints with parentheses and don&amp;#8217;t display them on HRTBs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20210&quot;&gt;&lt;code&gt;#20210&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;naked_asm!&lt;/code&gt; safe to call and fix &lt;code&gt;global_asm!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20232&quot;&gt;&lt;code&gt;#20232&lt;/code&gt;&lt;/a&gt; normalize projection types before const eval.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20235&quot;&gt;&lt;code&gt;#20235&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;where&lt;/code&gt; clause position in trait associated item completion.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20219&quot;&gt;&lt;code&gt;#20219&lt;/code&gt;&lt;/a&gt; outline parts of &lt;code&gt;ExpressionStore&lt;/code&gt; into a different allocation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20198&quot;&gt;&lt;code&gt;#20198&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20211&quot;&gt;&lt;code&gt;#20211&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20218&quot;&gt;&lt;code&gt;#20218&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20223&quot;&gt;&lt;code&gt;#20223&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20224&quot;&gt;&lt;code&gt;#20224&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;pull_assignment_up&lt;/code&gt;, &lt;code&gt;convert_named_struct_to_tuple_struct&lt;/code&gt;, &lt;code&gt;convert_match_to_let_else&lt;/code&gt;, &lt;code&gt;generate_impl&lt;/code&gt; and &lt;code&gt;remove_dbg&lt;/code&gt; assists to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #293</title>
        <pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/07/07/changelog-293.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/07/07/changelog-293.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/0ac65592a833bf40238831dd10e15283d63c46d5&quot;&gt;&lt;code&gt;0ac6559&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-07-07&quot;&gt;&lt;code&gt;2025-07-07&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2527&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20151&quot;&gt;&lt;code&gt;#20151&lt;/code&gt;&lt;/a&gt; only remove keyword prefixes (&lt;code&gt;macro@&lt;/code&gt; or &lt;code&gt;macro &lt;/code&gt;) from links in the docs if the target is inferred.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20158&quot;&gt;&lt;code&gt;#20158&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t warn about the proc macro server when the sysroot is missing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20160&quot;&gt;&lt;code&gt;#20160&lt;/code&gt;&lt;/a&gt; reduce diagnostic range for &lt;code&gt;macro_calls!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20120&quot;&gt;&lt;code&gt;#20120&lt;/code&gt;&lt;/a&gt; fix value resolution in &lt;code&gt;match&lt;/code&gt; patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20161&quot;&gt;&lt;code&gt;#20161&lt;/code&gt;&lt;/a&gt; fix closure capture analysis for &lt;code&gt;let&lt;/code&gt; expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20167&quot;&gt;&lt;code&gt;#20167&lt;/code&gt;&lt;/a&gt; improve &lt;code&gt;#[derive(Default)]&lt;/code&gt; expansion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20031&quot;&gt;&lt;code&gt;#20031&lt;/code&gt;&lt;/a&gt; respect length limit and improve adjustment hint tooltips.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20179&quot;&gt;&lt;code&gt;#20179&lt;/code&gt;&lt;/a&gt; handle divergence in destructuring assignments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20159&quot;&gt;&lt;code&gt;#20159&lt;/code&gt;&lt;/a&gt; always couple &lt;code&gt;--compile-time-deps&lt;/code&gt; with &lt;code&gt;--all-targets&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20170&quot;&gt;&lt;code&gt;#20170&lt;/code&gt;&lt;/a&gt; improve flycheck and build script progress reporting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20112&quot;&gt;&lt;code&gt;#20112&lt;/code&gt;&lt;/a&gt; add workaround for missing &lt;code&gt;Delimiter::None&lt;/code&gt; support to built-in macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20126&quot;&gt;&lt;code&gt;#20126&lt;/code&gt;&lt;/a&gt; improve panic message on discover command spawning errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20148&quot;&gt;&lt;code&gt;#20148&lt;/code&gt;&lt;/a&gt; honor &lt;code&gt;rust-analyzer.cargo.noDeps&lt;/code&gt; option when fetching sysroot metadata.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20175&quot;&gt;&lt;code&gt;#20175&lt;/code&gt;&lt;/a&gt; (first contribution) remove special handling for box patterns in &lt;code&gt;match_check&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20124&quot;&gt;&lt;code&gt;#20124&lt;/code&gt;&lt;/a&gt; remove last use of &lt;code&gt;rustc_pattern_analysis::Captures&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20156&quot;&gt;&lt;code&gt;#20156&lt;/code&gt;&lt;/a&gt; restructure proc macro loading errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20157&quot;&gt;&lt;code&gt;#20157&lt;/code&gt;&lt;/a&gt; re-enable fixpoint iteration for variance computation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20184&quot;&gt;&lt;code&gt;#20184&lt;/code&gt;&lt;/a&gt; remove dead field from &lt;code&gt;InferenceContext&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20169&quot;&gt;&lt;code&gt;#20169&lt;/code&gt;&lt;/a&gt; skip unnecessary &lt;code&gt;BodySourceMap&lt;/code&gt;'s &lt;code&gt;eq&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20134&quot;&gt;&lt;code&gt;#20134&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20135&quot;&gt;&lt;code&gt;#20135&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20136&quot;&gt;&lt;code&gt;#20136&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20137&quot;&gt;&lt;code&gt;#20137&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20165&quot;&gt;&lt;code&gt;#20165&lt;/code&gt;&lt;/a&gt; migrate &lt;code&gt;replace_is_method_with_if_let_method&lt;/code&gt;, &lt;code&gt;promote_local_to_const&lt;/code&gt;, &lt;code&gt;toggle_macro_delimiter&lt;/code&gt;, &lt;code&gt;wrap_unwrap_cfg_attr&lt;/code&gt; and &lt;code&gt;unmerge_match_arm&lt;/code&gt; assists to &lt;code&gt;SyntaxEditor&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20132&quot;&gt;&lt;code&gt;#20132&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;AsMut&lt;/code&gt;, &lt;code&gt;Borrow&lt;/code&gt; and &lt;code&gt;BorrowMut&lt;/code&gt; to &lt;code&gt;minicore&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20144&quot;&gt;&lt;code&gt;#20144&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;load_workspace_into_db&lt;/code&gt; version of &lt;code&gt;load_workspace&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19923&quot;&gt;&lt;code&gt;#19923&lt;/code&gt;&lt;/a&gt; bump &lt;code&gt;salsa&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #292</title>
        <pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/06/30/changelog-292.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/06/30/changelog-292.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/6df12139bccaaeecf6a34789e0ca799d1fe99c53&quot;&gt;&lt;code&gt;6df1213&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-06-30&quot;&gt;&lt;code&gt;2025-06-30&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2519&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20077&quot;&gt;&lt;code&gt;#20077&lt;/code&gt;&lt;/a&gt; (first contribution) take an optional &lt;code&gt;&quot;args&quot;: &quot;cursor&quot;&lt;/code&gt; in the VS Code &quot;Run&quot; command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19546&quot;&gt;&lt;code&gt;#19546&lt;/code&gt;&lt;/a&gt; highlight return values as related to &lt;code&gt;match&lt;/code&gt; / &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;&amp;#8658;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20100&quot;&gt;&lt;code&gt;#20100&lt;/code&gt;&lt;/a&gt; lower &lt;code&gt;PointeeSized&lt;/code&gt; to &lt;code&gt;?Sized&lt;/code&gt; to support the new &lt;code&gt;Sized&lt;/code&gt; trait hierarchy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20105&quot;&gt;&lt;code&gt;#20105&lt;/code&gt;&lt;/a&gt; parse new &lt;code&gt;[const] Trait&lt;/code&gt; syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20110&quot;&gt;&lt;code&gt;#20110&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t show float completions on integer literals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20096&quot;&gt;&lt;code&gt;#20096&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t show notifications on failed &lt;code&gt;rustfmt&lt;/code&gt; calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20121&quot;&gt;&lt;code&gt;#20121&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t append &lt;code&gt;--compile-time-deps&lt;/code&gt; to build script commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20073&quot;&gt;&lt;code&gt;#20073&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;ROOT&lt;/code&gt; hygiene for &lt;code&gt;args&lt;/code&gt; in the new &lt;code&gt;format_args!&lt;/code&gt; expansion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20069&quot;&gt;&lt;code&gt;#20069&lt;/code&gt;&lt;/a&gt; fix cargo project manifest not pointing to the workspace root.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20072&quot;&gt;&lt;code&gt;#20072&lt;/code&gt;&lt;/a&gt; respect configured &lt;code&gt;build.target-dir&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20061&quot;&gt;&lt;code&gt;#20061&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t wrap exit points with the right type in &quot;Wrap return type&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20103&quot;&gt;&lt;code&gt;#20103&lt;/code&gt;&lt;/a&gt; prettify AST in &lt;code&gt;PathTransform&lt;/code&gt; if it&amp;#8217;s coming from a macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20080&quot;&gt;&lt;code&gt;#20080&lt;/code&gt;&lt;/a&gt; clean up and expand &lt;code&gt;folding_ranges&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20092&quot;&gt;&lt;code&gt;#20092&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t complain about &lt;code&gt;rustc&lt;/code&gt; workspace loading if it&amp;#8217;s not required.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20036&quot;&gt;&lt;code&gt;#20036&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t default to &lt;code&gt;'static&lt;/code&gt; for trait object lifetimes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20012&quot;&gt;&lt;code&gt;#20012&lt;/code&gt;&lt;/a&gt; (first contribution) bump &lt;code&gt;literal-escaper&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20088&quot;&gt;&lt;code&gt;#20088&lt;/code&gt;&lt;/a&gt; de-&lt;code&gt;Arc&lt;/code&gt; trait items query.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20087&quot;&gt;&lt;code&gt;#20087&lt;/code&gt;&lt;/a&gt; short-circuit a couple of queries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20106&quot;&gt;&lt;code&gt;#20106&lt;/code&gt;&lt;/a&gt; make the &lt;code&gt;VariantFields&lt;/code&gt; query more idiomatic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20098&quot;&gt;&lt;code&gt;#20098&lt;/code&gt;&lt;/a&gt; unify formatting of progress messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20104&quot;&gt;&lt;code&gt;#20104&lt;/code&gt;&lt;/a&gt; clean up &lt;code&gt;provideCodeActions&lt;/code&gt; VS Code hook.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20116&quot;&gt;&lt;code&gt;#20116&lt;/code&gt;&lt;/a&gt; cancel CI workflow only after the main matrix has finished.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20084&quot;&gt;&lt;code&gt;#20084&lt;/code&gt;&lt;/a&gt; fix CI job cancellation on Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #291</title>
        <pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/06/23/changelog-291.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/06/23/changelog-291.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/0100bc737358e56f5dc2fc7d3c15b8a69cefb56b&quot;&gt;&lt;code&gt;0100bc7&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-06-23&quot;&gt;&lt;code&gt;2025-06-23&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2509&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19939&quot;&gt;&lt;code&gt;#19939&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;rust-analyzer.assist.preferSelf&lt;/code&gt; to prefer &lt;code&gt;Self&lt;/code&gt; instead of the enum name in assists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20047&quot;&gt;&lt;code&gt;#20047&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;cargo check --compile-time-deps&lt;/code&gt; when available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20020&quot;&gt;&lt;code&gt;#20020&lt;/code&gt;&lt;/a&gt; reload workspaces when &lt;code&gt;cargo&lt;/code&gt; config changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20018&quot;&gt;&lt;code&gt;#20018&lt;/code&gt;&lt;/a&gt; copy lockfile into target directory before invoking &lt;code&gt;cargo metadata&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20056&quot;&gt;&lt;code&gt;#20056&lt;/code&gt;&lt;/a&gt; support the new &lt;code&gt;format_args!&lt;/code&gt; expansion in 1.89.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20014&quot;&gt;&lt;code&gt;#20014&lt;/code&gt;&lt;/a&gt; show what &lt;code&gt;cargo metadata&lt;/code&gt; is doing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19945&quot;&gt;&lt;code&gt;#19945&lt;/code&gt;&lt;/a&gt; add quickfix to the &lt;code&gt;private-field&lt;/code&gt; diagnostic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20025&quot;&gt;&lt;code&gt;#20025&lt;/code&gt;&lt;/a&gt; (first contribution) hide imported private methods if &quot;private editable&quot; is disabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20041&quot;&gt;&lt;code&gt;#20041&lt;/code&gt;&lt;/a&gt; revert &quot;turn &lt;code&gt;BlockId&lt;/code&gt; into a &lt;code&gt;#[salsa::tracked]&lt;/code&gt;&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20022&quot;&gt;&lt;code&gt;#20022&lt;/code&gt;&lt;/a&gt; never make type mismatch diagnostic stable, even when there is a fix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20023&quot;&gt;&lt;code&gt;#20023&lt;/code&gt;&lt;/a&gt; improve completions in &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;while&lt;/code&gt; expression conditions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20039&quot;&gt;&lt;code&gt;#20039&lt;/code&gt;&lt;/a&gt; fix closure capturing in &lt;code&gt;let&lt;/code&gt; expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20035&quot;&gt;&lt;code&gt;#20035&lt;/code&gt;&lt;/a&gt; pass &lt;code&gt;--color=always&lt;/code&gt; from Test Explorer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19495&quot;&gt;&lt;code&gt;#19495&lt;/code&gt;&lt;/a&gt; start infesting &lt;code&gt;ide&lt;/code&gt; crates with a &lt;code&gt;'db&lt;/code&gt; lifetime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20046&quot;&gt;&lt;code&gt;#20046&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;hir::TypeParam::parent&lt;/code&gt; method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20050&quot;&gt;&lt;code&gt;#20050&lt;/code&gt;&lt;/a&gt; improve documentation for excluding imports from symbol search.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #290</title>
        <pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2025/06/16/changelog-290.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2025/06/16/changelog-290.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/a207299344bf7797e4253c3f6130313e33c2ba6f&quot;&gt;&lt;code&gt;a207299&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2025-06-16&quot;&gt;&lt;code&gt;2025-06-16&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;v0.3.2500&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19996&quot;&gt;&lt;code&gt;#19996&lt;/code&gt;&lt;/a&gt; add support for excluding imports from symbol search.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19837&quot;&gt;&lt;code&gt;#19837&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19985&quot;&gt;&lt;code&gt;#19985&lt;/code&gt;&lt;/a&gt; provide better incrementality when items are changed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19963&quot;&gt;&lt;code&gt;#19963&lt;/code&gt;&lt;/a&gt; do not report errors for unsized types without &lt;code&gt;where Self: Sized&lt;/code&gt; items.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19970&quot;&gt;&lt;code&gt;#19970&lt;/code&gt;&lt;/a&gt; fix proc macro server handling of strings with minuses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19973&quot;&gt;&lt;code&gt;#19973&lt;/code&gt;&lt;/a&gt; hide &lt;code&gt;dyn&lt;/code&gt; inlay hints for incomplete &lt;code&gt;impl&lt;/code&gt;s.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19942&quot;&gt;&lt;code&gt;#19942&lt;/code&gt;&lt;/a&gt; fix completions with some attribute macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19981&quot;&gt;&lt;code&gt;#19981&lt;/code&gt;&lt;/a&gt; do not force-descend into derives for goto IDE features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19983&quot;&gt;&lt;code&gt;#19983&lt;/code&gt;&lt;/a&gt; fix comparison of proc macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20000&quot;&gt;&lt;code&gt;#20000&lt;/code&gt;&lt;/a&gt; allow lifetime repeats in macros (&lt;code&gt;$($x)'a*&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19990&quot;&gt;&lt;code&gt;#19990&lt;/code&gt;&lt;/a&gt; generate annotations for macro-defined items if their name is in the input.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19982&quot;&gt;&lt;code&gt;#19982&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19991&quot;&gt;&lt;code&gt;#19991&lt;/code&gt;&lt;/a&gt; simplify and optimize &lt;code&gt;ItemTree&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20009&quot;&gt;&lt;code&gt;#20009&lt;/code&gt;&lt;/a&gt; optimize &lt;code&gt;pub(crate)&lt;/code&gt; and &lt;code&gt;pub(self)&lt;/code&gt; visibility resolution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20007&quot;&gt;&lt;code&gt;#20007&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20008&quot;&gt;&lt;code&gt;#20008&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;salsa&lt;/code&gt; usage more idiomatic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19995&quot;&gt;&lt;code&gt;#19995&lt;/code&gt;&lt;/a&gt; turn &lt;code&gt;BlockId&lt;/code&gt; into a &lt;code&gt;#[salsa::tracked]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/20006&quot;&gt;&lt;code&gt;#20006&lt;/code&gt;&lt;/a&gt; clean up incremental tests and verify query execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19997&quot;&gt;&lt;code&gt;#19997&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;InternedCallableDefId&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19980&quot;&gt;&lt;code&gt;#19980&lt;/code&gt;&lt;/a&gt; deduplicate`ItemTree` &lt;code&gt;ItemVisibilities&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19992&quot;&gt;&lt;code&gt;#19992&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;ThinVec&lt;/code&gt; in &lt;code&gt;ItemScope&lt;/code&gt; in a couple places.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19984&quot;&gt;&lt;code&gt;#19984&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;pref_align_of&lt;/code&gt; intrinsic handling, rename &lt;code&gt;{min_&amp;#8658;}align_of{,_val}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19930&quot;&gt;&lt;code&gt;#19930&lt;/code&gt;&lt;/a&gt; add support for type-erased &lt;code&gt;Semantics&amp;lt;'db, dyn HirDatabase&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19975&quot;&gt;&lt;code&gt;#19975&lt;/code&gt;&lt;/a&gt; test incremental trait solving.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/19989&quot;&gt;&lt;code&gt;#19989&lt;/code&gt;&lt;/a&gt; bump some deps.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
  </channel>
</rss>
